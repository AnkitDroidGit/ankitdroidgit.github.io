<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech Talks by Ankit Kumar</title>
    <description>Ankit Kumar is a Programmer, Technologist, Technical Writer, YouTuber and Tutor</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 16 Nov 2020 14:42:14 +0800</pubDate>
    <lastBuildDate>Mon, 16 Nov 2020 14:42:14 +0800</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>Building your own Google Chrome Extension</title>
        <description>&lt;p&gt;Probably you are reading this article on the Google Chrome browser. Right?&lt;/p&gt;

&lt;p&gt;If yes, you would have used extensions on your browser to customize your experience.&lt;/p&gt;

&lt;p&gt;Today I am here to describe how you can write and build your own extension for the Google Chrome browser.&lt;/p&gt;

&lt;h2 id=&quot;lets-start-&quot;&gt;Lets Start !!!!&lt;/h2&gt;

&lt;p&gt;If you feel lazy in reading articles, you should watch a video tutorial below&lt;/p&gt;

&lt;iframe width=&quot;1192&quot; height=&quot;670&quot; src=&quot;https://www.youtube.com/embed/CqdUGhzIddA&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;p&gt;Let’s start reading finally.&lt;/p&gt;

&lt;p&gt;By this time you have got to know that we are going an extension for Google Chrome.&lt;/p&gt;

&lt;p&gt;So the question comes what this extension will do for us?&lt;/p&gt;

&lt;p&gt;The answer is We are will build an extension that will open a new tab on the browser with a predefined URL, in this example it is my YouTube Channel URL.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;what-is-the-google-chrome-extension&quot;&gt;What is the Google Chrome extension?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Chrome Extension helps to add some functionality to Chrome through some of the JavaScript APIs Chrome exposes.&lt;/li&gt;
  &lt;li&gt;It is basically a webpage hosted within Chrome.&lt;/li&gt;
  &lt;li&gt;It can access some additional APIs.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Let’s do some code now!&lt;/p&gt;

&lt;h4 id=&quot;setting-up-the-project&quot;&gt;Setting up the project&lt;/h4&gt;

&lt;p&gt;Create a directory called ChromeExtension and Open this in your favorite code editor&lt;/p&gt;

&lt;h4 id=&quot;create-the-manifest&quot;&gt;Create the manifest&lt;/h4&gt;

&lt;p&gt;Extensions start with their &lt;a href=&quot;https://developer.chrome.com/extensions/extensions/manifest&quot;&gt;manifest&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Create a file called manifest.json and include the following code.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AnkitDroidGit/f858af50d5e8679d3ece5db765175096.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;name&lt;/strong&gt; is the name of the extension.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;version&lt;/strong&gt; is the current version of the extension.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;introduce-a-user-interface-and-logo&quot;&gt;Introduce a User Interface and Logo&lt;/h4&gt;

&lt;p&gt;Create a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test.html&lt;/code&gt; and add the following code.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AnkitDroidGit/14d4e07421368b047e530b731a531a5f.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Add &lt;strong&gt;logo&lt;/strong&gt; to project, I have added a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logo.png&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;These files need to be designated as a popup in the manifest under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;browser_action&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The updated manifest.json will look like this&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AnkitDroidGit/82b1205f19df9c94fe8218c9ec911a72.js&quot;&gt;&lt;/script&gt;

&lt;h4 id=&quot;override-pages&quot;&gt;Override Pages&lt;/h4&gt;

&lt;p&gt;As I mentioned above, we are building an extension that will open a new tab with a predefined URL. We have to add a page for it.&lt;/p&gt;

&lt;p&gt;Create a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;newtab.html&lt;/code&gt; and add the following code to it.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AnkitDroidGit/3f0339250c08c27984a4d14b9d52894a.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;These files need to be designated as a popup in the manifest under &lt;a href=&quot;https://developer.chrome.com/extensions/override&quot;&gt;chrome_url_overrides&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The updated manifest file shown is below&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AnkitDroidGit/f3992d4b244986a09a7c60ecc561ed74.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;We are done with the coding part.&lt;/p&gt;

&lt;p&gt;It was easy, wasn’t it?&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;adding-an-extension-to-chrome&quot;&gt;Adding an extension to Chrome&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Open the Extension Management page by navigating to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chrome://extensions&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/post/chrome/open_extension.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The Extension Management page can also be opened by clicking on the &lt;strong&gt;Chrome menu&lt;/strong&gt;, hovering over &lt;strong&gt;More Tools&lt;/strong&gt; then select &lt;strong&gt;Extensions&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Enable &lt;strong&gt;Developer Mode&lt;/strong&gt; by clicking the toggle switch next to &lt;strong&gt;Developer mode&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Click the &lt;strong&gt;LOAD UNPACKED&lt;/strong&gt; button and select the extension directory&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/post/chrome/deve_mode.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/post/chrome/extension_loaded.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The extension has been successfully installed !!!&lt;/p&gt;

&lt;p&gt;You should pin it to make visible on the extension bar of Google Chrome.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/post/chrome/test.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;testing-extension&quot;&gt;Testing extension&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/post/chrome/test2.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Also, to be notified about my new articles and stories, follow me on &lt;a href=&quot;https://ankitdeveloper.medium.com/&quot;&gt;Medium&lt;/a&gt;, &lt;a href=&quot;https://github.com/AnkitDroidGit&quot;&gt;Github&lt;/a&gt;, and &lt;a href=&quot;https://twitter.com/KumarrAnkitt&quot;&gt;Twitter&lt;/a&gt;. You can find me on &lt;a href=&quot;https://www.linkedin.com/in/kumarankitkumar/&quot;&gt;LinkedIn&lt;/a&gt; as well. I am quite active on &lt;a href=&quot;https://dev.to/ankitkumar&quot;&gt;Dev Community&lt;/a&gt; as well and write small topics over there.&lt;/p&gt;

&lt;p&gt;Cheers!!&lt;/p&gt;
</description>
        <pubDate>Sat, 05 Sep 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/building-own-cheome-extension/</link>
        <guid isPermaLink="true">http://localhost:4000/building-own-cheome-extension/</guid>
        
        <category>Chrome</category>
        
        <category>Google Chrome</category>
        
        <category>Chrome Extension</category>
        
        <category>JavaScript</category>
        
        <category>TypeScript</category>
        
        <category>HTML</category>
        
        <category>CSS</category>
        
        
        <category>Chrome</category>
        
        <category>Google Chrome</category>
        
        <category>Chrome Extension</category>
        
        <category>JavaScript</category>
        
        <category>TypeScript</category>
        
        <category>HTML</category>
        
        <category>CSS</category>
        
      </item>
    
      <item>
        <title>Apollo Server Express GraphQL API using Node.js with TypeScript</title>
        <description>&lt;p&gt;In this article, we are going to see how to build a Nodejs GraphQL API with TypeScript using Apollo Server Express.&lt;/p&gt;

&lt;p&gt;I conducted a workshop for beginners who want to write GraphQL APIs using Typescript and Nodejs.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;If it feels boring reading lots of words one by one and you can understand Hindi a bit. You can watch video tutorials for this.
Video tutorials are available on my &lt;a href=&quot;https://www.youtube.com/channel/UCalpz0wG0xvNXcVYasg1pEA&quot;&gt;YouTube Channel&lt;/a&gt; as &lt;a href=&quot;https://www.youtube.com/playlist?list=PLt7lRnT2c5QTdzvHgKybuMankvw855qMW&quot;&gt;Playlsit&lt;/a&gt;.&lt;/p&gt;

&lt;iframe width=&quot;1192&quot; height=&quot;670&quot; src=&quot;https://www.youtube.com/embed/mAFPj-leaMw&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;p&gt;Let’s understand a few terminologies before actually diving into the code.&lt;/p&gt;

&lt;h3 id=&quot;nodejs&quot;&gt;Node.js&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Node.js is a platform built on Chrome’s JavaScript runtime for easily building fast and scalable network applications.&lt;/li&gt;
  &lt;li&gt;Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/docs/&quot;&gt;More document about node.js is here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;apollo-server&quot;&gt;Apollo Server&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Apollo Server is an &lt;a href=&quot;https://github.com/apollographql/apollo-server&quot;&gt;open-source&lt;/a&gt;, spec-compliant GraphQL server that’s compatible with any GraphQL client, including &lt;a href=&quot;https://www.apollographql.com/docs/react&quot;&gt;Apollo Client&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;It’s the best way to build a production-ready, self-documenting GraphQL API that can use data from any source.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apollographql.com/docs/apollo-server/&quot;&gt;Read more about Apollo Server here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;you-can-use-apollo-server-as&quot;&gt;You can use Apollo Server as:&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;A stand-alone GraphQL server, including in a serverless environment&lt;/li&gt;
  &lt;li&gt;An add-on to your application’s existing &lt;a href=&quot;https://www.apollographql.com/docs/apollo-server/integrations/middleware/&quot;&gt;Node.js middleware&lt;/a&gt; (such as Express or Fastify)&lt;/li&gt;
  &lt;li&gt;A gateway for a &lt;a href=&quot;https://www.apollographql.com/docs/apollo-server/federation/introduction/&quot;&gt;federated data graph&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;apollo-server-provides&quot;&gt;Apollo Server provides:&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Straightforward setup&lt;/strong&gt;, so your client developers can start fetching data quickly&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Incremental adoption&lt;/strong&gt;, allowing you to add features as they’re needed&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Universal compatibility&lt;/strong&gt; with any data source, any build tool, and any GraphQL client&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Production readiness&lt;/strong&gt;, enabling you to ship features faster.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;express&quot;&gt;Express&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Express&lt;/strong&gt; is a routing and middleware web framework that has minimal functionality of its own: An Express application is essentially a series of middleware function calls.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://expressjs.com/en/guide/using-middleware.html&quot;&gt;Read more about express here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;typescript&quot;&gt;TypeScript&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;TypeScript is JavaScript that scales.&lt;/li&gt;
  &lt;li&gt;Because TypeScript is a superset of JavaScript, it doesn’t have a default template — there would be too many. Instead, other projects have their own TypeScript bootstrap templates with their own context.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why use TypeScript over JavaScript?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If an experienced developer is working on relatively small coding projects, then JavaScript is ideal. However, if you have the knowledge and expertise development team, then Typescript is the most preferred option. Typescript has the following advantages over Javascript.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The powerful type system, including generics &amp;amp; JS features&lt;/li&gt;
  &lt;li&gt;TypeScript uses concepts like types and interfaces to describe data being used.&lt;/li&gt;
  &lt;li&gt;The Ecosystem is quite powerful and intuitive. Thus, it allows you to statically type various types of idiomatic JavaScript features like union types, intersection, discriminated union.&lt;/li&gt;
  &lt;li&gt;With Typescript, many npm packages either come with static type definitions or have an external one that is easy to install.&lt;/li&gt;
  &lt;li&gt;Typescript has a feature of prototyping.&lt;/li&gt;
  &lt;li&gt;Early spotted bugs&lt;/li&gt;
  &lt;li&gt;Predictability&lt;/li&gt;
  &lt;li&gt;Readability&lt;/li&gt;
  &lt;li&gt;Power of OOP&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;lets-write-code-for-what-we-are-here&quot;&gt;Let’s write code for what we are here….&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Creating a directory and working on&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;mkdir apollo-server-demo-project
cd apollo-server-demo-project
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Setting up the npm project&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;npm init — yes
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This command will create a package.json file in the project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install and initializing TypeScript for our project&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Add TypeScript to our project’s npm devDependencies&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;npm install — save-dev typescript
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Generate a tsconfig.json file using &lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;npx&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;npx tsc --init --rootDir src --outDir dist --lib dom,es6 --module commonjs –removeComments
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Running above command will create tsconfig.json file in the project and it will look like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/post/graphql/tsconfig.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We will also need &lt;a href=&quot;https://www.npmjs.com/package/nodemon&quot;&gt;nodemon&lt;/a&gt; to compile our code on change, and &lt;a href=&quot;https://www.npmjs.com/package/ts-node&quot;&gt;ts-node&lt;/a&gt; to exec TypeScript files.&lt;/p&gt;

&lt;p&gt;Let’s install these 2 dependencies as well now&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;npm i nodemon ts-node --save-dev
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;writing-actual-code-now&quot;&gt;Writing actual code now&lt;/h3&gt;

&lt;p&gt;Create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/src&lt;/code&gt; directory with a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;server.ts&lt;/code&gt; file and print hello world from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;server.ts&lt;/code&gt; file&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;console.log(“Hello World”);
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Run below command to see the result on your terminal of project.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;nodemon 'src/server.ts' --exec 'ts-node' src/server.ts
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You will see &lt;strong&gt;Hello World&lt;/strong&gt; printed on your terminal as below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/post/graphql/hello_world.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;lets-now-create-an-actual-graphql-api&quot;&gt;Lets now create an actual GraphQL API&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Setting up Apollo-Server-Express&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Installing dependencies for &lt;a href=&quot;https://www.npmjs.com/package/apollo-server-express&quot;&gt;apollo-server-express&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/cors&quot;&gt;cors&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/express&quot;&gt;express&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/graphql&quot;&gt;graphql&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;npm install apollo-server-express cors express graphql
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Installing dependencies for &lt;a href=&quot;https://www.npmjs.com/package/@types/express&quot;&gt;@types/express&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/@types/node&quot;&gt;@types/node&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/graphql-tools&quot;&gt;graphql-tools&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/graphql-import-node&quot;&gt;graphql-import-node&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;npm install @types/express @types/node graphql-tools graphql-import-node --save-dev
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Creating a simple schema and resolver&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/src&lt;/code&gt; folder, create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/schema&lt;/code&gt; folder and create a file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;schema.graphql&lt;/code&gt;&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AnkitDroidGit/390ef242f8c77c279449fb836e0cc116.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Then let’s quickly create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resolvers.ts&lt;/code&gt; file in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/src&lt;/code&gt; folder&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AnkitDroidGit/0c612e3863f2b62c6d7570c774e311bf.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;schema.ts&lt;/code&gt; file in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/src&lt;/code&gt; folder that will be in charge of making an Executable GraphQL Schema:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AnkitDroidGit/127b6d94d27be9922a711d9156096b13.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;Finally creating apollo-server&lt;/strong&gt;&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AnkitDroidGit/c12cc8d38653c28c81c203ba9c34e009.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Run your server again open http://localhost:8000/graphql on browsers of any other graphql client software.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/post/graphql/run_server.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;lets-test-your-hellowolrd-query-from-the-client&quot;&gt;Let’s test your helloWolrd query from the client&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/post/graphql/test_query.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Add scripts in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file as below for running commands in an easier way from next time.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&quot;scripts&quot;: {
&quot;start&quot;: &quot;node 'dist/server.js'&quot;,
&quot;build&quot;: &quot;tsc -p . &amp;amp;&amp;amp; ncp src/schema dist/schema&quot;,
&quot;start:dev&quot;: &quot;npm run build:dev&quot;,
&quot;build:dev&quot;: &quot;nodemon 'src/server.ts' --exec 'ts-node' src/server.ts -e ts,graphql&quot;
},
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run build:dev&lt;/code&gt; in your terminal will compile your code.&lt;/li&gt;
  &lt;li&gt;You can run the compiled code with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm start:dev&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run build&lt;/code&gt; in your terminal will compile your code and put it in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/dist&lt;/code&gt; folder.&lt;/li&gt;
  &lt;li&gt;You can run the compiled code with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm start&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lets-now-create-a-mutation-graphql-api&quot;&gt;Lets now create a Mutation GraphQL API&lt;/h2&gt;

&lt;p&gt;Add mutation object in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/schem/schema.graphql&lt;/code&gt; file&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AnkitDroidGit/44032e5a567c15d5f5dea197db6f32d1.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Add some logic for resolving mutation in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/resolvers.ts&lt;/code&gt; file as shown below&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AnkitDroidGit/d7bea58a81ce5ccbc69712290a34114f.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Run the command and test mutation from client&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/post/graphql/test_mutation.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Happy learning and happy coding !!!&lt;/p&gt;

&lt;p&gt;The code for this workshop is available as open source on &lt;a href=&quot;https://github.com/AnkitDroidGit/Apollo-Server-Workshop&quot;&gt;GitHub repo&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I have tried to share some of the lessons that I have learned from various sources. I will continue to keep learning more and sharing more. I hope it helps someone and makes their life a bit easier.&lt;/p&gt;

&lt;p&gt;Also, to be notified about my new articles and stories, follow me on &lt;a href=&quot;https://ankitdeveloper.medium.com/&quot;&gt;Medium&lt;/a&gt;, &lt;a href=&quot;https://github.com/AnkitDroidGit&quot;&gt;Github&lt;/a&gt;, and &lt;a href=&quot;https://twitter.com/KumarrAnkitt&quot;&gt;Twitter&lt;/a&gt;. You can find me on &lt;a href=&quot;https://www.linkedin.com/in/kumarankitkumar/&quot;&gt;LinkedIn&lt;/a&gt; as well. I am quite active on &lt;a href=&quot;https://dev.to/ankitkumar&quot;&gt;Dev Community&lt;/a&gt; as well and write small topics over there.&lt;/p&gt;

&lt;p&gt;Cheers!!!!&lt;/p&gt;
</description>
        <pubDate>Tue, 14 Jul 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/fundamentals-of-graphql/</link>
        <guid isPermaLink="true">http://localhost:4000/fundamentals-of-graphql/</guid>
        
        <category>GraphQL</category>
        
        <category>GraphQL Query</category>
        
        <category>GraphQL Mutation</category>
        
        <category>Nodejs</category>
        
        <category>JavaScript</category>
        
        <category>TypeScript</category>
        
        
        <category>GraphQL</category>
        
        <category>GraphQL Query</category>
        
        <category>GraphQL Mutation</category>
        
        <category>Nodejs</category>
        
        <category>JavaScript</category>
        
        <category>TypeScript</category>
        
      </item>
    
      <item>
        <title>Github Secret : Creating A GitHub Profile</title>
        <description>&lt;h2 id=&quot;creating-a-github-profile&quot;&gt;Creating A GitHub Profile&lt;/h2&gt;

&lt;p&gt;Github says&lt;/p&gt;

&lt;p&gt;AnkitDroidGit/AnkitDroidGit is now a special repository: its README.md will appear on your profile!&lt;/p&gt;

&lt;p&gt;GitHub recently released a feature that allows users to create a profile README to display prominently on their GitHub profile.
This write-up explains how to access this new feature and create your own special repository.&lt;/p&gt;

&lt;h2 id=&quot;lets-start-&quot;&gt;Let’s Start !!&lt;/h2&gt;

&lt;p&gt;The profile README is created by creating a new repository with the same name as your username.
Let’s understand with my example:
My GitHub username is AnkitDroidGit so I created a new repository with the name AnkitDroidGit.
Note: new repository name must match (including letter case) your GitHub username.&lt;/p&gt;

&lt;h3 id=&quot;lets-follow-the-steps&quot;&gt;Let’s follow the steps&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Create a new repository with the same name (including casing) as your GitHub username: https://github.com/new&lt;/li&gt;
  &lt;li&gt;Let it be public.&lt;/li&gt;
  &lt;li&gt;Initialize this repository with a README.&lt;/li&gt;
  &lt;li&gt;Modify README.md file inside the repo with your content (text, GIFs, images, emojis, etc.)&lt;/li&gt;
  &lt;li&gt;Commit your README!&lt;/li&gt;
  &lt;li&gt;Push changes to GitHub (if you made changes locally).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/max/1400/1*iBP_8ZiavCJ5yz7rmaUPPg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And finally, you will get a profile read me like mine.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/post/github_profile_full.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Also, to be notified about my new articles and stories, follow me on Medium, Github. You can find me on LinkedIn as well. Cheers!&lt;/p&gt;
</description>
        <pubDate>Mon, 29 Jun 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/github-secret-creating-github-profile/</link>
        <guid isPermaLink="true">http://localhost:4000/github-secret-creating-github-profile/</guid>
        
        <category>git</category>
        
        <category>github</category>
        
        <category>tutorial</category>
        
        
        <category>git</category>
        
        <category>github</category>
        
        <category>tutorial</category>
        
      </item>
    
      <item>
        <title>Working with Github (or any software development version control using Git) for the beginners</title>
        <description>&lt;p&gt;Working with Github (or any software development version control using Git) for the beginners&lt;/p&gt;

&lt;p&gt;Many new developers face this problem when they start working on a project which is shared among many team member and many of them need to work together on the project.
It becomes hard for newbies to create PR and adding their work to the upstream project repo.
I am trying to make this easier for all the newbies who are going to work on the project collaboration in the team.
By following these steps, it becomes easier to handle changes, stashing, committing, creating, and merging PR after approval.&lt;/p&gt;

&lt;p&gt;Let’s go through the steps with commands and sample project on Github.
For getting hands-on experience of the below steps, feel free to fork &lt;a href=&quot;https://github.com/AnkitDroidGit/git-basics-for-newbies&quot;&gt;this Github repo&lt;/a&gt; and follow along&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Clone project from upstream to the local repo&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;     git clone git@github.com:AnkitDroidGit/git-basics-for-newbies.git
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Open project with your favorite IDE/Code Editor&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Pull the latest changes from upstream if you haven’t pulled changes from quite some time (think of changes merged by other members of your team)&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;     git pull
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Make your changes on the master (default) branch. I am adding a new file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;contributors.md&lt;/code&gt; and appending it with my name &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ankit Kumar&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Add file(s) to git for tracking by git add&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;     git add name
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;You can add all files by running below command&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;     git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Check differences by running the following command.&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;     git diff
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Now suppose someone from your teams has already added and merged his changes to the master branch. If you are going to commit and push your changes without synching repo with upstream, you might get conflicts that become hard to resolve later in case of many conflicts.
Its a great idea to sync your local repo with upstream.
We will do it here by the below commands.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;First, stash your changes. Stashing saves your working directory and index state WIP on master: with the latest commit&lt;/p&gt;

        &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    git stash
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Run git pull for latest changes from upstream branch, if any.&lt;/p&gt;

        &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    git pull
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Apply your stashed change to an active changelist or default changelist.&lt;/p&gt;

        &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    git stash apply
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Check your difference again by running git diff&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    git diff
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Resolve conflicts if any. Resolving conflicts now is easier compared to the time of many many conflicts at the time of creating PR without synching.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Now, add commit message&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    git commit - m &lt;span class=&quot;s2&quot;&gt;&quot;added my name in contributors.md&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Checkout to a new branch&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    git checkout &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; addedName
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Push your changes to the newly checked out branch. It will create a new branch on upstream with the same name your have checked out with.&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    git push &lt;span class=&quot;nt&quot;&gt;--set-upstream&lt;/span&gt; origin addedName
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Visit Github (or any software development version control using Git) repo on the browser.
Click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;compare and pull request&lt;/code&gt;,
Write your PR name with appropriate comments.
Add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reviewers&lt;/code&gt; to request team members to review your PR.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Finally click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create pull request&lt;/code&gt;
You have done your work already.
Wait for the reviewer to review&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Once PR is approved by the reviewer(s).
Visit your branch and merge your branch.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;On your local repo, pull master again before making any other changes, follow the steps again.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, to be notified about my new articles and stories, follow me on &lt;a href=&quot;https://medium.com/@ankitdeveloper&quot;&gt;Medium&lt;/a&gt;, &lt;a href=&quot;https://github.com/AnkitDroidGit&quot;&gt;Github&lt;/a&gt;. You can find me on &lt;a href=&quot;https://www.linkedin.com/in/kumarankitkumar/&quot;&gt;LinkedIn&lt;/a&gt; as well. Cheers!&lt;/p&gt;
</description>
        <pubDate>Tue, 23 Jun 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/git-basics-for-beginners/</link>
        <guid isPermaLink="true">http://localhost:4000/git-basics-for-beginners/</guid>
        
        <category>git</category>
        
        <category>github</category>
        
        <category>tutorial</category>
        
        
        <category>git</category>
        
        <category>github</category>
        
        <category>tutorial</category>
        
      </item>
    
      <item>
        <title>Getting Started with CameraX API</title>
        <description>&lt;p&gt;CameraX, launched at Google IO 19 , is a Jetpack support library, built to help us make camera app development easier. It provides a consistent and easy-to-use API surface that works across most Android devices, with backward-compatibility to Android 5.0 (API level 21).&lt;/p&gt;

&lt;h3 id=&quot;why-camerax-is-beneficial&quot;&gt;Why CameraX is beneficial?&lt;/h3&gt;

&lt;p&gt;As per the &lt;a href=&quot;https://developer.android.com/training/camerax#primary&quot;&gt;documentation&lt;/a&gt;, CameraX has following primary benefits :&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Easy to use&lt;/li&gt;
  &lt;li&gt;Consistence across the devices&lt;/li&gt;
  &lt;li&gt;It provide new camera experience to the user&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;requirements&quot;&gt;Requirements&lt;/h3&gt;

&lt;p&gt;Requirements to use CameraX are :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Android Studio 3.3 or later&lt;/li&gt;
  &lt;li&gt;A device running on Android L or later&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;lets-get-hands-on-app-code&quot;&gt;Let’s get hands on app code&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Create Android Project with minimum APL level 21.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    defaultConfig {
        applicationId &quot;com.ankkumar.cameraxsampleapp&quot;
        minSdkVersion 21
        targetSdkVersion 28
        ......
    }
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add dependencies in app&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    implementation &quot;androidx.camera:camera-core:1.0.0-alpha01&quot;
    implementation &quot;androidx.camera:camera-camera2:1.0.0-alpha01&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Request Camera Permissions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the manifest file&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    &amp;lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&amp;gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Handoling runtime permission in kotlin&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    import android.Manifest
    import android.util.Size
    import android.graphics.Matrix
    import java.util.concurrent.TimeUnit

    private const val REQUEST_CODE_PERMISSIONS = 881

    private val REQUIRED_PERMISSIONS = arrayOf(Manifest.permission.CAMERA)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;actual code of permission handling look like below&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AnkitDroidGit/132ef18e5760d202e43513b55e2488c7.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;time-to-create-ui&quot;&gt;Time to create UI&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Create and Implement view finder&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;https://gist.github.com/AnkitDroidGit/e8207c26817774fdb20af611fdf9ed29.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Implementation of view finder&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Declare lateinit&lt;/p&gt;

        &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    private lateinit var viewFinder: TextureView
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;define it inside onCreate(..) method
        &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;   viewFinder = findViewById(R.id.finder_view)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;and implement it as below&lt;/p&gt;

        &lt;script src=&quot;https://gist.github.com/AnkitDroidGit/b691aef48268d2f7cafd787bcf8c60de.js&quot;&gt;&lt;/script&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;implementing-image-capture&quot;&gt;Implementing Image Capture&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Write below code to capture image
  &lt;script src=&quot;https://gist.github.com/AnkitDroidGit/11555201e33e8b74eda1e757685aeb71.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Place below code between &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CameraX.bindToLifecycle(this, preview)&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CameraX.bindToLifecycle(this, preview, imageCapture)&lt;/code&gt;
  &lt;script src=&quot;https://gist.github.com/AnkitDroidGit/7976120ebcfeefaef55bb73e05bc420b.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;analysing-captured-image&quot;&gt;Analysing captured image&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;create a class called ImageAnalyzer as below&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  class ImageAnalyzer : ImageAnalysis.Analyzer {
      override fun analyze(image: ImageProxy?, rotationDegrees: Int) {
          TODO(&quot;not implemented&quot;) //To change body of created functions use File | Settings | File Templates.
      }
  }
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;And implement above class for analyzing image
  &lt;script src=&quot;https://gist.github.com/AnkitDroidGit/77c87e7d35f22621063f5f9213c5353d.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;Now add image analysis code inside &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;startCamera()&lt;/code&gt; method as below
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;   // Setup image analysis pipeline that computes average pixel luminance
  val analyzerConfig = ImageAnalysisConfig.Builder().apply {
      // Use a worker thread for image analysis to prevent glitches
      val analyzerThread = HandlerThread(
            &quot;LuminosityAnalysis&quot;
      ).apply { start() }
      setCallbackHandler(Handler(analyzerThread.looper))
      // In our analysis, we care more about the latest image than
      // analyzing *every* image
      setImageReaderMode(
          ImageAnalysis.ImageReaderMode.ACQUIRE_LATEST_IMAGE
      )
  }.build()
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;After adding this snippet modify CameraX.bindToLifecycle() method with this argument&lt;/li&gt;
  &lt;li&gt;Now our complete startCamera() will look like this
  &lt;script src=&quot;https://gist.github.com/AnkitDroidGit/de4d7bb7c453a9e1fecec162cfb071f6.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;testing-app&quot;&gt;Testing app&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/post/test_camera_x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And it works perfect !!!
Congratulations !!!&lt;/p&gt;
</description>
        <pubDate>Mon, 13 May 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/camera-x-android/</link>
        <guid isPermaLink="true">http://localhost:4000/camera-x-android/</guid>
        
        <category>Android</category>
        
        <category>Jetpack Compose</category>
        
        <category>CameraX</category>
        
        <category>Technology</category>
        
        
        <category>Android</category>
        
        <category>Jetpack Compose</category>
        
        <category>CameraX</category>
        
        <category>Technology</category>
        
      </item>
    
  </channel>
</rss>
